// Generated by CoffeeScript 1.8.0
var EventEmitter, Handler, Zookeeper, handler, options, zookeeper,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

EventEmitter = require('events').EventEmitter;

Zookeeper = require('./zookeeper');

Handler = (function(_super) {
  var sendHeartbeat;

  __extends(Handler, _super);

  function Handler() {
    this.heartbeatSequence = 0;
  }

  sendHeartbeat = function() {
    this.emit('heartbeat', "Heartbeat #" + this.heartbeatSequence);
    return this.heartbeatSequence += 1;
  };

  Handler.prototype.start = function(next) {
    if (!this.heartbeatInterval) {
      this.heartbeatInterval = setInterval(sendHeartbeat.bind(this), 2000);
    }
    return next(null);
  };

  Handler.prototype.stop = function(next) {
    if (this.heartbeatInterval) {
      clearInterval(this.heartbeatInterval);
      delete this.heartbeatInterval;
    }
    return next(null);
  };

  return Handler;

})(EventEmitter);

handler = new Handler;

options = {
  url: 'http://localhost:3000',
  component: 'abigail',
  host: 'kirk'
};

zookeeper = new Zookeeper(handler, options);

zookeeper.on('status', function(event) {
  return console.log('status:', event);
});
